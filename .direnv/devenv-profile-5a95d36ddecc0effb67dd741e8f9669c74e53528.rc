unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
BASH='/noshell'
HOSTTYPE='x86_64'
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LINENO='76'
MACHTYPE='x86_64-pc-linux-gnu'
NIX_BUILD_CORES='0'
export NIX_BUILD_CORES
NIX_STORE='/nix/store'
export NIX_STORE
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='linux-gnu'
PATH='/path-not-set'
export PATH
PS4='+ '
builder='/nix/store/x88ivkf7rmrhd5x3cvyv5vh3zqqdnhsk-bash-interactive-5.2-p15/bin/bash'
export builder
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
name='devenv-shell'
export name
out='/home/shebpamm/stuff/keytime-desktop/outputs/out'
export out
outputs='out'
shellHook='
# Remove all the unnecessary noise that is set by the build env
unset NIX_BUILD_TOP NIX_BUILD_CORES NIX_STORE
unset TEMP TEMPDIR TMP TMPDIR
# $name variable is preserved to keep it compatible with pure shell https://github.com/sindresorhus/pure/blob/47c0c881f0e7cfdb5eaccd335f52ad17b897c060/pure.zsh#L235
unset builder out shellHook stdenv system
# Flakes stuff
unset dontAddDisableDepTrack outputs

# For `nix develop`. We get /noshell on Linux and /sbin/nologin on macOS.
if [[ "$SHELL" == "/noshell" || "$SHELL" == "/sbin/nologin" ]]; then
  export SHELL=/nix/store/x88ivkf7rmrhd5x3cvyv5vh3zqqdnhsk-bash-interactive-5.2-p15/bin/bash
fi

# https://github.com/numtide/devshell/issues/158
PATH=${PATH#/path-not-set:}

export DEVENV_PROFILE=/nix/store/axrczlm10plj3zc0n3n1f3kbljr3c1q8-devenv-profile

# add installed packages to PATH
export PATH="$DEVENV_PROFILE/bin:$PATH"

# prepend common compilation lookup paths
export PKG_CONFIG_PATH="$DEVENV_PROFILE/lib/pkgconfig:${PKG_CONFIG_PATH-}"
export LD_LIBRARY_PATH="$DEVENV_PROFILE/lib:${LD_LIBRARY_PATH-}"
export LIBRARY_PATH="$DEVENV_PROFILE/lib:${LIBRARY_PATH-}"
export C_INCLUDE_PATH="$DEVENV_PROFILE/include:${C_INCLUDE_PATH-}"

# these provide shell completions / default config options
export XDG_DATA_DIRS="$DEVENV_PROFILE/share:${XDG_DATA_DIRS-}"
export XDG_CONFIG_DIRS="$DEVENV_PROFILE/etc/xdg:${XDG_CONFIG_DIRS-}"

export DEVENV_DOTFILE='\''/home/shebpamm/stuff/keytime-desktop/.devenv'\''
export DEVENV_PROFILE='\''/nix/store/axrczlm10plj3zc0n3n1f3kbljr3c1q8-devenv-profile'\''
export DEVENV_ROOT='\''/home/shebpamm/stuff/keytime-desktop'\''
export DEVENV_STATE='\''/home/shebpamm/stuff/keytime-desktop/.devenv/state'\''
export RUST_SRC_PATH='\''/nix/store/s4vxjh97v58yci24ki9avkhxffnzhhh4-rust-lib-src'\''


export CARGO_INSTALL_ROOT=$('\''/nix/store/bblyj5b3ii8n6v4ra0nb37cmi3lf8rz9-coreutils-9.3/bin/realpath'\'' '\''--no-symlinks'\'' '\''/home/shebpamm/stuff/keytime-desktop/.devenv/state/cargo-install'\'')
export PATH="$PATH:$CARGO_INSTALL_ROOT/bin"


export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/nix/store/nzw7krhdm0ijbfmskvqrzw9nabqygv18-xorgproto-2023.2/share/pkgconfig
export LD_LIBRARY_PATH=/nix/store/kv8g1glbw6avfkq86x40lrp1c6x2gz1q-webkitgtk-2.42.2+abi=4.0/lib:/nix/store/5pzqljy5fy7rsbrxicrqdlz3hvb25jhr-gtk+3-3.24.38/lib:/nix/store/b6b71vq4ahf6habxzk8ajkizq0f3hiln-cairo-1.18.0/lib:/nix/store/97iq7h7hap878b2xc5dqfcp89nmnawcb-gdk-pixbuf-2.42.10/lib:/nix/store/5qxy21wbd1n391y8wrf2djyjkiz1bs16-glib-2.78.1/lib:/nix/store/091k3fjpqfiwpm8pyqlficq87jk2iwqj-dbus-1.14.10-lib/lib:/nix/store/k3d7ny5h682kixy91iw7sm653kxyqr8d-openssl-3.0.12/lib:/nix/store/6kdk0rn09jjashhcb7yknklsc03dyycm-librsvg-2.57.0/lib:/nix/store/m8lgxa0vxzg4ma8b1h5nalsz93cd89a5-at-spi2-core-2.50.0-dev/lib:/nix/store/5qlry8s28q321mgak217l655byddnwqh-harfbuzz-7.3.0-dev/lib:/nix/store/pjnx8s1m422bb32kwys0imzn3q92xs1i-stdenv-linux/lib:/nix/store/pjnx8s1m422bb32kwys0imzn3q92xs1i-stdenv-linux/lib:/nix/store/8xgb8phqmfn9h971q7dg369h647i1aa0-zlib-1.3/lib:$LD_LIBRARY_PATH
export XDG_DATA_DIRS=/nix/store/82zya9x49jsi9ajbl2n4g29pd3ql80gc-gsettings-desktop-schemas-45.0/share/gsettings-schemas/gsettings-desktop-schemas-45.0:/nix/store/5pzqljy5fy7rsbrxicrqdlz3hvb25jhr-gtk+3-3.24.38/share/gsettings-schemas/gtk+3-3.24.38:$XDG_DATA_DIRS

export PS1="\[\e[0;34m\](devenv)\[\e[0m\] ${PS1-}"

# set path to locales on non-NixOS Linux hosts
if [ -z "${LOCALE_ARCHIVE-}" ]; then
  export LOCALE_ARCHIVE=/nix/store/k23afqb8da5s4283pai9zzvrnh4bvg9n-glibc-locales-2.38-27/lib/locale/locale-archive
fi


# note what environments are active, but make sure we don'\''t repeat them
if [[ ! "${DIRENV_ACTIVE-}" =~ (^|:)"$PWD"(:|$) ]]; then
  export DIRENV_ACTIVE="$PWD:${DIRENV_ACTIVE-}"
fi

# devenv helper
if [ ! type -p direnv &>/dev/null && -f .envrc ]; then
  echo "You have .envrc but direnv command is not installed."
  echo "Please install direnv: https://direnv.net/docs/installation.html"
fi

mkdir -p .devenv
rm -f .devenv/profile
ln -s /nix/store/axrczlm10plj3zc0n3n1f3kbljr3c1q8-devenv-profile .devenv/profile

'
export shellHook
stdenv='/nix/store/nnfy4x1dd9f9m446vk502s7v1y5gr80z-naked-stdenv'
export stdenv
system='x86_64-linux'
export system
runHook ()
{
 
    eval "$shellHook";
    unset runHook
}
PATH="$PATH:$nix_saved_PATH"
XDG_DATA_DIRS="$XDG_DATA_DIRS:$nix_saved_XDG_DATA_DIRS"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "$shellHook"
